{"version":3,"sources":["components/GifGrid/GifGrid.module.scss","GifExpertApp.module.scss","components/AddCategoryField/AddCategoryField.tsx","helpers/getGifs.ts","hooks/useFetchGifs.ts","components/GifGridItem/GifGridItem.tsx","components/GifGrid/GifGrid.tsx","GifExpertApp.tsx","index.js","components/GifGridItem/GifGridItem.module.scss"],"names":["module","exports","AddCategoryField","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","styles","card","src","alt","container","GifGrid","grid","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,KAAO,wB,mBCAzBD,EAAOC,QAAU,CAAC,UAAY,kC,6GCiCfC,EA5BU,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,cAA2C,EAE/BC,mBAAS,IAFsB,mBAE5DC,EAF4D,KAEhDC,EAFgD,KAiBnE,OACI,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAACS,GAAD,OAA4BP,GAA5B,mBAA2CO,OACzDN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBW,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,OACrBV,EAAcU,EAAOF,a,+BCXhBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DAEF,iCACD,mCACF,EAERC,EANa,UAEF,iCAFE,oBAMmBC,UAAUH,GAN7B,kBAIL,EAJK,oBAGH,oCAHG,SAOII,MAAMF,GAPV,cAObG,EAPa,gBAQIA,EAASC,OARb,uBAQXC,EARW,EAQXA,KAGFC,EAAOD,EAAKE,KAAI,SAACC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAftB,kBAmBZM,GAnBY,4CAAH,sDCuBLO,EAnBM,SAACf,GAAqC,IAAD,EAE5Bd,mBAAsB,CAC5CqB,KAAM,GACNS,SAAS,IAJyC,mBAE/CC,EAF+C,KAExCC,EAFwC,KAgBtD,OATAC,qBAAW,WACPpB,EAASC,GAAWoB,MAAK,SAACC,GAAD,OAAUH,EAC/B,CACIX,KAAMc,EACNL,SAAS,SAGlB,CAAChB,IAEGiB,G,gBCAIK,EAZK,SAAC,GAAsC,IAApCV,EAAmC,EAAnCA,MAAOV,EAA4B,EAA5BA,IAE1B,OACI,sBAAKqB,UAAYC,IAAOC,KAAxB,UACI,qBAAKC,IAAMxB,EAAMyB,IAAMf,IACvB,qBAAKW,UAAYC,IAAOI,UAAxB,SACI,gCAAShB,U,iBCiBViB,EAtBC,SAAC,GAAgC,IAA9B7B,EAA6B,EAA7BA,SAA6B,EAEVe,EAAcf,GAAlCa,EAF8B,EAEpCN,KAAcS,EAFsB,EAEtBA,QAEtB,OACI,gCACA,6BAAKhB,IACAgB,GAAW,aACZ,oBAAIO,UAAYC,IAAOM,KAAvB,SAEQjB,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAESA,GADCA,EAAIC,a,iBCSvBoB,EAzBM,WAAO,IAAD,EAEa7C,mBAAmB,IAFhC,mBAEhBQ,EAFgB,KAEJT,EAFI,KAIvB,OACI,gCACI,8CACA,uBAEA,cAAC,EAAD,CACIA,cAAeA,IAGnB,qBAAKsC,UAAYC,IAAOI,UAAxB,SACKlC,EAAWe,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MChB7BgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U,kBCN1BrD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,UAAY,kC","file":"static/js/main.f1fed490.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"GifGrid_grid__3-qzW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GifExpertApp_container__1N9bN\"};","import React, { useState, Dispatch, SetStateAction } from 'react';\n\ntype AddCategoryFieldProps = {\n    setCategories: Dispatch<SetStateAction<string[]>>;\n}\n\nconst AddCategoryField = ({ setCategories }: AddCategoryFieldProps) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleOnChange = ({target}: any) => {\n        setInputValue(target.value);\n    }\n\n    const handleOnSubmit = (e: any) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2) {\n            setCategories((categories: string[]) => [ inputValue, ...categories ]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleOnSubmit }>\n            <input \n                type='text'\n                value={ inputValue }\n                onChange={ handleOnChange }\n            />\n        </form>\n    );\n}\n\nexport default AddCategoryField;","export const getGifs = async ( category: string ) => {\n\n    const base_url = 'https://api.giphy.com/v1/gifs/';\n    const api_key = 'O6tOWI6t6hQJz77nxKg99KKgVwanoN3t';\n    const limit = 5;\n\n    const url = `${ base_url }search?q=${ encodeURI(category) }&limit=${ limit }&api_key=${ api_key }`;\n    const response = await fetch(url);\n    const { data } = await response.json();\n\n    // map gifs\n    const gifs = data.map((img: any) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import { useEffect, useState } from \"react\";\nimport type { GifResponse } from '../DataTypes';\nimport { getGifs } from \"../helpers/getGifs\";\n\nconst useFetchGifs = (category: string) : GifResponse  => {\n\n    const [state, setState] = useState<GifResponse>({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category ).then((imgs) => setState(\n            {\n                data: imgs,\n                loading: false\n            }\n        ) );\n    }, [category])\n\n    return state;\n}\n\nexport default useFetchGifs;","import React from 'react';\nimport styles from './GifGridItem.module.scss';\n\ntype GifGridItemProps = {\n    title: string;\n    url: string;\n}\n\nconst GifGridItem = ({ title, url }: GifGridItemProps) => {\n\n    return (\n        <div className={ styles.card }>\n            <img src={ url } alt={ title } />\n            <div className={ styles.container }>\n                <small>{ title }</small>\n            </div>\n        </div>\n    );\n}\n\nexport default GifGridItem;","import React from 'react';\nimport useFetchGifs from '../../hooks/useFetchGifs';\nimport GifGridItem from '../GifGridItem/GifGridItem';\nimport styles from './GifGrid.module.scss';\n\ntype GifGridProps = {\n    category: string;\n}\n\nconst GifGrid = ({ category }: GifGridProps) => {\n\n    const { data: images, loading } = useFetchGifs( category );\n\n    return (\n        <div>\n        <h3>{category}</h3>\n            {loading && 'loading...'}\n            <ol className={ styles.grid }>\n                {\n                    images.map(img => (\n                        <GifGridItem\n                            key={ img.id }\n                            { ...img } // rest parameter\n                        />\n                    ))\n                }\n            </ol>\n        </div>\n    );\n}\n\nexport default GifGrid;","import React, { useState } from 'react';\nimport AddCategoryField from './components/AddCategoryField/AddCategoryField';\nimport GifGrid from './components/GifGrid/GifGrid';\nimport styles from './GifExpertApp.module.scss';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState<string[]>([]);\n\n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <hr />\n\n            <AddCategoryField\n                setCategories={setCategories}\n            />\n\n            <div className={ styles.container }>\n                {categories.map(category => (\n                    <GifGrid\n                        key={category}\n                        category={category}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"GifGridItem_card__2ommL\",\"container\":\"GifGridItem_container__1olVY\"};"],"sourceRoot":""}